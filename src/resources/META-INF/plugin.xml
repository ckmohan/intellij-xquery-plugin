<idea-plugin version="2">
	<version>0.1.1</version>
	<vendor email="ron@overstory.co.uk" url="https://github.com/overstory/intellij-xquery-plugin">Ron Hitchens, OverStory Ltd</vendor>
	<idea-version since-build="111.1" until-build=""/>
	<name>XQuery Langage Plugin</name>
	<id>uk.co.overstory.xquery</id>
	<description>An XQuery language plugin for IntelliJ supporting refactoring and builtin API info</description>
	<category>Custom Languages</category>
	<change-notes><![CDATA[
	<p>
		This plugin provides language support for XQuery in IntelliJ/IDEA.  It includes
		language-aware navigation (jump to definition, find usages), refactoring
		(function/variable rename, more refactorings to come), error/warning highlights,
		online API information for known functions, various hover-over annotations.
	</p>
	<p>
		This plugin is early in its development and is still missing many
		planned features.  Use at your own risk.
	</p>
    <h3>0.1.1:</h3>
    <ul>
        <li>Added Ctl-Q popup documention for functions and variables</li>
        <li>Suppressed undefined function annotations for imported namespaces as a hack until they can be resolved across modules</li>
        <li>Suppressed unused warning for variables named $_</li>
    </ul>
    <h3>0.1:</h3>
    <ul>
        <li>First release into the wild, please be kind</li>
        <li>Basic syntax highlighting</li>
        <li>Entity aware bracket matching</li>
        <li>Go to definition, find usages, rename for variables and functions</li>
        <li>Type-ahead support for functions and variables</li>
        <ul><li>Function completion still requires () following cursor - will eventually fix</li></ul>
        <li>Hover-over popup API annotations for builtin functions</li>
        <li>Error and warning annotations for undefined, unused, duplicate functions and variables</li>
        <li>Custom color settings for recognized token types</li>
    </ul>
]]>
	</change-notes>

	<depends optional="true" config-file="plugin-java.xml">com.intellij.modules.java</depends>

	<extensions defaultExtensionNs="com.intellij">
		<errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
		<lang.parserDefinition language="XQY" implementationClass="uk.co.overstory.xquery.XqyParserDefinition"/>
		<lang.findUsagesProvider language="XQY" implementationClass="uk.co.overstory.xquery.XqyFindUsagesProvider"/>
		<lang.syntaxHighlighterFactory key="XQY" implementationClass="uk.co.overstory.xquery.editor.XqySyntaxHighlighterFactory"/>
		<lang.braceMatcher language="XQY" implementationClass="uk.co.overstory.xquery.XqyBraceMatcher"/>
		<lang.commenter language="XQY" implementationClass="uk.co.overstory.xquery.XqyCommenter"/>
		<lang.refactoringSupport language="XQY" implementationClass="uk.co.overstory.xquery.refactor.XqyRefactoringSupportProvider"/>
		<lang.documentationProvider language="XQY" implementationClass="uk.co.overstory.xquery.XqyDocumentationProvider"/>
		<annotator language="XQY" implementationClass="uk.co.overstory.xquery.editor.XqyAnnotator"/>
		<fileTypeFactory implementation="uk.co.overstory.xquery.XqyFileTypeFactory"/>
		<colorSettingsPage implementation="uk.co.overstory.xquery.editor.XqyColorSettingsPage"/>
		<quoteHandler fileType="XQuery" className="uk.co.overstory.xquery.editor.XqyQuoteHandler"/>
		<completion.contributor language="XQY" implementationClass="uk.co.overstory.xquery.completion.XqyCompletionContributor"/>
		<renameInputValidator implementation="uk.co.overstory.xquery.refactor.XqyRenameInputValidator"/>
		<lang.documentationProvider language="XQY" implementationClass="uk.co.overstory.xquery.documentation.XqyDocumentationProvider"/>
	</extensions>
	<!--
		<fileTemplateGroup implementation="uk.co.overstory.xquery.actions.XqyTemplatesFactory"/>
    <lang.namesValidator language="Clojure"
                         implementationClass="org.jetbrains.plugins.clojure.refactoring.rename.ClojureNameValidator"/>
	-->

	<application-components>
		<!-- Add your application components here -->
	</application-components>

	<project-components>
		<component>
			<implementation-class>uk.co.overstory.xquery.components.UnusedItemsHighlightPassFactory</implementation-class>
			<skipForDefaultProject/>
		</component>
	</project-components>

	<actions>
		<!-- Create file actions -->
<!--
		<action id="XQuery.XQueryFile" class="uk.co.overstory.xquery.actions.NewXqueryFileAction"
				text="XQuery File" description="Create new XQuery File">
			<add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFromTemplate"/>
		</action>
-->
	</actions>

</idea-plugin>